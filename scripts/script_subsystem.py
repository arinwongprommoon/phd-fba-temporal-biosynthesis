#!/usr/bin/env python3
import sys

import pandas as pd
from cobra.io import load_yaml_model

# Take arguments from the command line.
# One argument is expected: a string that is either "full" or "easy".
arg = sys.argv[1]
mode = arg[0]

# NB: This is 8.6.2 and generated by GECKO 3. I'm borrowing this just to get a database of subsystems.
print("Loading YAML model, will take a while...")
model = load_yaml_model("../data/gemfiles/ecYeastGEMfull.yml")
print("Model loaded")

if mode == "full":
    print("Full mode: all reactions are saved.")
    full_subsystem_df = pd.DataFrame(
        {
            "reaction_id": [reaction.id for reaction in model.reactions],
            "subsystem": [reaction.subsystem for reaction in model.reactions],
        }
    )
    print(f"Number of reactions: {len(full_subsystem_df)}")
    filepath = "../data/lookup/full_subsystems.csv"
    full_subsystem_df.to_csv(filepath)
    print(f"Saved to: {filepath}")
# Avoids writing complicated parsing for enzyme usage heatmap.
elif mode == "easy":
    print("Easy mode: just the 'r_XXXX' part is saved.")
    reaction_ids = []
    subsystems = []
    for reaction in model.reactions:
        if reaction.id[:2] == "r_":
            reaction_ids.append(reaction.id[:6])
            subsystems.append(list(reaction.subsystem)[0])
        else:
            print(f"ignoring {reaction.id}")
    easy_subsystem_df = pd.DataFrame(
        {
            "reaction_id": reaction_ids,
            "subsystem": subsystems,
        }
    )
    easy_subsystem_df.drop_duplicates(inplace=True)
    print(f"Number of reactions: {len(easy_subsystem_df)}")
    filepath = "../data/lookup/easy_subsystems.csv"
    easy_subsystem_df.to_csv(filepath)
    print(f"Saved to: {filepath}")
else:
    print(f"Mode '{mode}' invalid!")
